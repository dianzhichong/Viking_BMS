/*
* Copyright (C) 2014 Viking Motorsport Team (VMS)
*
* This file is part of VMS Battery Management System.
*
* VMS Battery Management System is free software; you can redistribute 
* it and/or modify it under the terms of the GNU General Public License
* as published by the Free Software Foundation; either version 2,
* or (at your option) any later version.
*
* VMS Battery Management System is distributed in the hope that
* it will be useful, but WITHOUT ANY WARRANTY; without even
* the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
* See the GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with paparazzi; see the file COPYING. If not, write to
* the Free Software Foundation, 59 Temple Place - Suite 330,
* Boston, MA 02111-1307, USA.
*/

/**
* @file can_bms/mlec_bms.h
*
* CAN interface for RLECs
*/
#ifndef MLEC_CAN_H
#define MLEC_CAN_H

#include "mbed.h"
#include "led.h"
#include "rlec_module.h"

#define RLEC_CAN_VOLTAGE_MULT 0.00244
#define RLEC_CAN_MODULE_MULT 0.0122
#define RLEC_CAN_FREQUENCY 500000
#define NUM_RLECS 16

enum MLECStatus {
  MLECUninit,
  MLECInit,
  MLECRunning
};

struct MLECCan {
    // Rx message
    CANMessage rx_msg;
    
    // RLEC request msg
    CANMessage tMsg0;
    CANMessage tMsg1;
    CANMessage tMsg2;
    CANMessage tMsg3;
    
    // Broadcast msgs
    CANMessage bdc0;
    CANMessage bdc1;
    CANMessage bdc2;
    CANMessage bdc3;
    CANMessage bdc4;
    CANMessage bdc5;

    // array with active RLECS
    uint8_t rlecs[NUM_RLECS];
    struct RLECModule rlecsX[NUM_RLECS];
    
    // Index of current RLECs probe
    uint8_t rlec_idx;
    
    // Tx Message offset
    uint8_t rlec_txoffset;
    
    // Status
    enum MLECStatus status;
    
    // Variables for RLEC scan
    uint8_t request_sent; 
};

extern struct MLECCan mlec;

void can_init_rlecs(void);
void can_periodic_rlecs(void);
void can_event_rlecs(void);

void mlec_init_broadcast(void);
void mlec_init_msgs(void);
void mlec_update_msg_ids(uint16_t);
uint8_t mlec_broadcast(void);
uint8_t mlec_send_request(void);

void rlec_parse_msg(void);
void rlec_parse_scan(int);

void mlec_charger_periodic(RLECModule* module, CANMessage* msg6);

extern DigitalOut hlim;

#endif /* MLEC_CAN_H */

